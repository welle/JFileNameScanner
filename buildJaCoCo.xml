<?xml version="1.0"?>
<project name="Phoenix Coverage tests" default="runJaCoCo"
	basedir="." xmlns:jacoco="antlib:org.jacoco.ant">

	<target name="chkPropsCob">
		<property name="chkclasses" value="$${classes}" />
		<property name="chktest" value="$${test_classes}" />
		<property name="chkjacoco.home" value="$${jacoco.home}" />
		<condition property="missingPropCob">
			<or>
				<equals arg1="${chkclasses}" arg2="${classes}" />
				<equals arg1="" arg2="${classes}" />
				<equals arg1="${chkjacoco.home}" arg2="${jacoco.home}" />
				<equals arg1="" arg2="${jacoco.home}" />
				<equals arg1="${chktest}" arg2="${test_classes}" />
				<equals arg1="" arg2="${test_classes}" />
			</or>
		</condition>
	</target>

	<target name="failCob" if="missingPropCob">
		<fail message="missing property(ies) : classes, jacoco.home, test_classes" />
	</target>

	<target name="runJaCoCo" depends="chkPropsCob, failCob" unless="missingPropCob">
		<echo message="Running JaCoCo analysis..." />
		<antcall target="runJunit" />
	</target>

	<path id="jacoco.classpath">
		<fileset dir="${jacoco.home}">
			<include name="lib/jacocoant.jar" />
		</fileset>
	</path>

	<taskdef classpathref="jacoco.classpath" uri="antlib:org.jacoco.ant"
		resource="org/jacoco/ant/antlib.xml" />

	<target name="runJunit" depends="chkProps, fail" unless="missingProp">
		<echo message="Running JUnit tests..." />
		<antcall target="allJunit" />
	</target>

	<target name="chkProps">
		<property name="chk0" value="$${classes}" />
		<property name="chk3" value="$${test_classes}" />
		<condition property="missingProp">
			<or>
				<equals arg1="${chk0}" arg2="${classes}" />
				<equals arg1="" arg2="${classes}" />
				<equals arg1="${chk3}" arg2="${test_classes}" />
				<equals arg1="" arg2="${test_classes}" />
			</or>
		</condition>
	</target>

	<target name="fail" if="missingProp">
		<fail message="missing property(ies) : classes, test_classes" />
	</target>

	<import file="classpath.xml" />

	<target name="allJunit">
		<path id="JUnit.classpath">
			<pathelement location="${classes}" />
			<pathelement location="${test_classes}" />
		</path>

		<delete dir="junit/reports/" />
		<mkdir dir="junit/reports/" />

		<jacoco:coverage destfile="jacoco/jacoco.exec">
			<junit fork="yes" forkmode="once" printsummary="yes"
				haltonfailure="no" showoutput="yes">
				<classpath location="libJunit/junit-4.12.jar" />
				<classpath location="libJunit/hamcrest-core-1.3.jar" />
				<jvmarg value="-noverify" />

				<assertions>
					<enable />
					<disable class="jet.framework.util.JUnitAsserter" />
				</assertions>
				<jvmarg value="-Xms256m" />
				<jvmarg value="-Xmx2048m" />
				<jvmarg value="-XX:MaxPermSize=512m" />
				<!-- Specify the name of the coverage data file to use. The value specified 
					below is the default. -->

				<classpath refid="JUnit.classpath" />

				<classpath refid="jacoco.classpath" />

				<formatter type="xml" />

				<batchtest todir="junit/reports/" haltonfailure="no">
					<fileset dir="JFileNameScanner/javasource">
						<include name="**/*_JUnitTest.java" />
					</fileset>
				</batchtest>

			</junit>
		</jacoco:coverage>

	</target>

	<target name="report" depends="allJunit">
		<path id="JUnit.classpath">
			<pathelement location="${classes}" />
			<pathelement location="${test_classes}" />

			<path refid="Phoenix.classpath" />
		</path>

		<jacoco:report>
			<executiondata>
				<file file="jacoco/jacoco.exec" />
			</executiondata>

			<structure name="JFileNameScanner">
				<classfiles>
					<fileset dir="${classes}" />
				</classfiles>
				<sourcefiles encoding="UTF-8">
					<fileset dir="JFileNameScanner/javasource" />
				</sourcefiles>
			</structure>

			<html destdir="jacocoreport" />

		</jacoco:report>

	</target>

</project>